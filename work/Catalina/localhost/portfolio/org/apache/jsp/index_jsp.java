/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.16
 * Generated at: 2022-01-28 09:28:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPではGET、POST、またはHEADのみが許可されます。 JasperはOPTIONSも許可しています。");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,user-scalable=no\">\r\n");
      out.write("  <meta property='og:type' content='website'>\r\n");
      out.write("  <meta property='og:title' content='Matsuda Asari ポートフォリオ'>\r\n");
      out.write("  <meta property='og:url' content='URLが入る'>\r\n");
      out.write("  <meta property='og:description' content='Matsuda Asariのポートフォリオサイトです。'>\r\n");
      out.write("  <meta property=\"og:image\" content=\"img/ogp.png\">\r\n");
      out.write("  <meta name=\"description\" content=\"Matsuda Asariのポートフォリオサイトです\" />\r\n");
      out.write("  <title>Matsuda Asari ポートフォリオ</title>\r\n");
      out.write("  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n");
      out.write("  <link\r\n");
      out.write("    href=\"https://fonts.googleapis.com/css2?family=Amatic+SC&family=Cormorant+Garamond&family=Dancing+Script&display=swap\"\r\n");
      out.write("    rel=\"stylesheet\">\r\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css?family=Material+Icons+Outlined\" rel=\"stylesheet\">\r\n");
      out.write("  <link href=\"css/ress.css\" media=\"all\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("  <link href=\"css/style.css\" media=\"all\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("  <link rel=\"shortcut icon\" href=\"img/favicon.ico\" />\r\n");
      out.write("  <link rel=”canonical” href=”URLが入る” />\r\n");
      out.write("  <link rel=\"stylesheet\" type=\"text/css\" href=\"css/5-6.css\">\r\n");
      out.write("  \r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("  <div id=\"particles-js\"></div>\r\n");
      out.write("  <div class=\"wrapper\">\r\n");
      out.write("\r\n");
      out.write("    <main class=\"content\">\r\n");
      out.write("\r\n");
      out.write("      <!-- header -->\r\n");
      out.write("      <div class=\"header-date\">Today: ");
      out.print( new java.util.Date() );
      out.write("</div>\r\n");
      out.write("      <header class=\"header\">\r\n");
      out.write("        <div class=\"header-inner\">\r\n");
      out.write("          <p class=\"header-title\">Matsuda Asari</p>\r\n");
      out.write("          <p class=\"header-subtitle\">Portfolio</p>\r\n");
      out.write("        </div>\r\n");
      out.write("      </header>\r\n");
      out.write("      <!-- /header -->\r\n");
      out.write("\r\n");
      out.write("      <!-- gnav -->\r\n");
      out.write("      <nav class=\"gnav\">\r\n");
      out.write("        <div class=\"gnav-inner\">\r\n");
      out.write("          <ul class=\"gnav-list\">\r\n");
      out.write("            <li class=\"gnav-item\"><a href=\"#works\">works</a></li>\r\n");
      out.write("            <li class=\"gnav-item\"><a href=\"#skill\">skill</a></li>\r\n");
      out.write("            <li class=\"gnav-item\"><a href=\"#about\">about</a></li>\r\n");
      out.write("            <li class=\"gnav-item\"><a href=\"#contact\">SNS</a></li>\r\n");
      out.write("          </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("      </nav>\r\n");
      out.write("      <!-- /gnav -->\r\n");
      out.write("\r\n");
      out.write("      <!-- works -->\r\n");
      out.write("      <section class=\"works section\" id=\"works\">\r\n");
      out.write("        <div class=\"inner\">\r\n");
      out.write("          <h2 class=\"title\">works</h2>\r\n");
      out.write("          <div class=\"works-list\">\r\n");
      out.write("            <a class=\"works-item\" href=\"portfolio.jsp\">\r\n");
      out.write("              <p class=\"works-img\"><img src=\"img/portfolio.png\" alt=\"\" /></p>\r\n");
      out.write("              <p class=\"works-name\">Portfolio</p>\r\n");
      out.write("              <p class=\"works-info\">Created date：2022.1　　個人開発</p>\r\n");
      out.write("            </a>\r\n");
      out.write("            <a class=\"works-item\" href=\"proto-space.jsp\">\r\n");
      out.write("              <p class=\"works-img\"><img src=\"img/proto-space1.png\" alt=\"\" /></p>\r\n");
      out.write("              <p class=\"works-name\">protospace-19960814</p>\r\n");
      out.write("              <p class=\"works-info\">Created date：2021.2　　個人開発</p>\r\n");
      out.write("            </a>\r\n");
      out.write("            <a class=\"works-item\" href=\"jscount.jsp\">\r\n");
      out.write("              <p class=\"works-img\"><img src=\"img/jscount1.png\" alt=\"\" /></p>\r\n");
      out.write("              <p class=\"works-name\">JsCount</p>\r\n");
      out.write("              <p class=\"works-info\">Created date：2021.5　　個人開発</p>\r\n");
      out.write("            </a>\r\n");
      out.write("            <a class=\"works-item\" href=\"chat-app.jsp\">\r\n");
      out.write("              <p class=\"works-img\"><img src=\"img/chat-app1.png\" alt=\"\" /></p>\r\n");
      out.write("              <p class=\"works-name\">chat-app</p>\r\n");
      out.write("              <p class=\"works-info\">Created date：2020.8　　個人開発</p>\r\n");
      out.write("            </a>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </section>\r\n");
      out.write("      <!-- /works -->\r\n");
      out.write("\r\n");
      out.write("      <!-- skill -->\r\n");
      out.write("      <section class=\"skill section\" id=\"skill\">\r\n");
      out.write("        <div class=\"inner\">\r\n");
      out.write("          <h2 class=\"title\">skill</h2>\r\n");
      out.write("          <div class=\"skill-list\">\r\n");
      out.write("            <div class=\"skill-item\">\r\n");
      out.write("              <p class=\"skill-img\"><img src=\"img/html-css.jpeg\" alt=\"\"></p>\r\n");
      out.write("              <div class=\"skill-body\">\r\n");
      out.write("                <h3 class=\"skill-name\">HTML5/CSS3</h3>\r\n");
      out.write("                <p class=\"skill-text\">\r\n");
      out.write("                  使用歴：２年</p>\r\n");
      out.write("                <p>基本的なWEBサイトの見た目を作ることができます</p>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"skill-item\">\r\n");
      out.write("              <p class=\"skill-img\"><img src=\"img/ruby.png\" alt=\"\"></p>\r\n");
      out.write("              <div class=\"skill-body\">\r\n");
      out.write("                <h3 class=\"skill-name\">Ruby/Ruby on Rails</h3>\r\n");
      out.write("                <p class=\"skill-text\">\r\n");
      out.write("                  使用歴：２年</p>\r\n");
      out.write("                <p>チャットや投稿など、７つのアクションを使用したWEBアプリの作成をすることができます</p>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"skill-item\">\r\n");
      out.write("              <p class=\"skill-img\"><img src=\"img/js.png\" alt=\"\"></p>\r\n");
      out.write("              <div class=\"skill-body\">\r\n");
      out.write("                <h3 class=\"skill-name\">JavaScript</h3>\r\n");
      out.write("                <p class=\"skill-text\">\r\n");
      out.write("                  使用歴：１.５年</p>\r\n");
      out.write("                <p>文字カウントや非同期通信などの実装を経験しました。</p>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"skill-item\">\r\n");
      out.write("              <p class=\"skill-img\"><img src=\"img/mysql.png\" alt=\"\"></p>\r\n");
      out.write("              <div class=\"skill-body\">\r\n");
      out.write("                <h3 class=\"skill-name\">Mysql</h3>\r\n");
      out.write("                <p class=\"skill-text\">\r\n");
      out.write("                  使用歴：２年</p>\r\n");
      out.write("                <p>DBはMysqlを使用しておりました。</p>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"skill-item\">\r\n");
      out.write("              <p class=\"skill-img\"><img src=\"img/java.png\" alt=\"\"></p>\r\n");
      out.write("              <div class=\"skill-body\">\r\n");
      out.write("                <h3 class=\"skill-name\">JAVA</h3>\r\n");
      out.write("                <p class=\"skill-text\">\r\n");
      out.write("                  使用歴：１ヶ月</p>\r\n");
      out.write("                <p>ProgateでJAVAの基礎を学習しました。今後はフレームワークなどを学習し更に知識を深め、様々な機能を作成していけるようにしたいと考えております。</p>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"skill-item\">\r\n");
      out.write("              <p class=\"skill-img\"><img src=\"img/office.jpeg\" alt=\"\"></p>\r\n");
      out.write("              <div class=\"skill-body\">\r\n");
      out.write("                <h3 class=\"skill-name\">office</h3>\r\n");
      out.write("                <p class=\"skill-text\">\r\n");
      out.write("                  使用歴：5ヶ月</p>\r\n");
      out.write("                <p>Officeを使用し、資料やマニュアル作成などを行いました。</p>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"skill-item\">\r\n");
      out.write("              <p class=\"skill-img\"><img src=\"img/github.png\" alt=\"\"></p>\r\n");
      out.write("              <div class=\"skill-body\">\r\n");
      out.write("                <h3 class=\"skill-name\">環境・ツール等</h3>\r\n");
      out.write("                <p class=\"skill-text\">\r\n");
      out.write("                  Mac OS</p>\r\n");
      out.write("                <p>GitHub</p>\r\n");
      out.write("                <p>Slack</p>\r\n");
      out.write("                <p>AWS（EC2/S3）</p>\r\n");
      out.write("                <p>Visual Studio Code</p>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </section>\r\n");
      out.write("      <!-- /skill -->\r\n");
      out.write("\r\n");
      out.write("      <!-- about -->\r\n");
      out.write("      <section class=\"about section\" id=\"about\">\r\n");
      out.write("        <div class=\"inner\">\r\n");
      out.write("          <h2 class=\"title\">about</h2>\r\n");
      out.write("          <div class=\"profile\">\r\n");
      out.write("            <p class=\"profile-img\">\r\n");
      out.write("              <img src=\"img/hamu.jpeg\" alt=\"\">\r\n");
      out.write("            </p>\r\n");
      out.write("            <div class=\"profile-body\">\r\n");
      out.write("              <p>\r\n");
      out.write("                1996年に、山口県下関市で誕生しました。山口県立西高等学校　理数科を卒業後、柳川リハビリテーション学院に入学し、作業療法士になるべく勉学に励みました。\r\n");
      out.write("                卒業後は、作業療法士として社会福祉法人　秋の会　虹の家で勤務し、発達障害（生まれながらの障害）を専門に働いておりました。\r\n");
      out.write("              </p>\r\n");
      out.write("              <p>ある日、「株式会社divという会社を知り、人生にサプライズを」という企業理念と「すべての人が幸せに生きる世界をつくる」というビジョンに惹かれ職種を変えての転職を決意しました。\r\n");
      out.write("              </p>\r\n");
      out.write("              <p>\r\n");
      out.write("                株式会社にメンター（エンジニア講師）として入社し、初めてプログラミングを学習。プログラミング言語の難しさとともに、うまくコードが書けた際の達成感を知りました。もっとプログラミングについて学びたい・仕事をしたいと感じ、ITの道を今後も目指していこうと決意しました。\r\n");
      out.write("              </p>\r\n");
      out.write("              <p>2021年5月に会社都合で退社し、自己研鑽としてプログラミングの学習やアプリ作成を行いつつ、転職活動を行いました。\r\n");
      out.write("              </p>\r\n");
      out.write("              <p>\r\n");
      out.write("                2021年10月にキャル株式会社に入社し、株式会社ランテックの情報システム部で、問い合わせ対応や、Officeを用いた資料・マニュアル作成などの業務を行っております。\r\n");
      out.write("              </p>\r\n");
      out.write("              <p>\r\n");
      out.write("                今後は、JAVAなどの知識を深めつつ、多くの経験を積みゆくゆくは開発などに携わっていきたいと考えております。\r\n");
      out.write("              </p>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </section>\r\n");
      out.write("      <!-- /about -->\r\n");
      out.write("\r\n");
      out.write("      <!-- contact -->\r\n");
      out.write("      <section class=\"contact section\" id=\"contact\">\r\n");
      out.write("        <div class=\"inner\">\r\n");
      out.write("          <h2 class=\"title\">SNS</h2>\r\n");
      out.write("          <div class=\"contact-list\">\r\n");
      out.write("            <a class=\"contact-item\" href=\"https://twitter.com/\" target=\"_blank\" rel=\"noopener\">Twitter</a>\r\n");
      out.write("            <a class=\"contact-item\" href=\"https://www.instagram.com/\" target=\"_blank\" rel=\"noopener\">Instagram</a>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </section>\r\n");
      out.write("      <!-- /contact -->\r\n");
      out.write("      <div class=\"page-top\" id=\"js-page-top\">\r\n");
      out.write("        <span class=\"material-icons-outlined\">expand_less</span>\r\n");
      out.write("      </div>\r\n");
      out.write("    </main>\r\n");
      out.write("\r\n");
      out.write("    <!-- footer -->\r\n");
      out.write("    <footer class=\"footer\">\r\n");
      out.write("      <div class=\"copyright\">&copy;Matsuda Asari</div>\r\n");
      out.write("    </footer>\r\n");
      out.write("    <!-- /footer -->\r\n");
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("  <script type='text/javascript' src=\"js/script.js\"></script>\r\n");
      out.write("  <script src=\"http://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js\"></script>\r\n");
      out.write("<!--自作のJS-->\r\n");
      out.write("<script src=\"js/5-6.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
